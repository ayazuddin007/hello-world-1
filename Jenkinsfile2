node {
    stage ('SCM Checkout') {
        git 'https://github.com/ayazuddin007/hello-world.git'
    }
    stage ('Mvn Compile-Package') {
       def mvnHome = tool name: 'MAVEN_HOME', type: 'maven'
       sh "${mvnHome}/bin/mvn clean install package"
    }
    stage ('Create Docker Image') {
        def removeOldDockerContainer = 'docker rm -f mycontainer'
        def removeOldDockerImage = 'docker rmi ayazway/myimage'
        def dockerImage = 'docker build -t ayazway/myimage .'
       
        sshagent(['dockerHost']) {
            // Copy Dockerfile and war file
            sh "scp -o StrictHostKeyChecking=no Dockerfile webapp/target/*.war ec2-user@172.31.40.159:/home/ec2-user/"
            // Delete old docker container and image
            try {
                sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.40.159 ${removeOldDockerContainer}"
                sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.40.159 ${removeOldDockerImage}"
            }catch(error){
                //  do nothing if there is an exception
            }
            // Create Docker Image
            sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.40.159 ${dockerImage}"
        }
    }
    stage ('Push Docker Image') {
        sshagent(['dockerHost']) {
            withCredentials([string(credentialsId: 'dockerHub', variable: 'dockerHubPwd')]) {
                // DockerHub Credentials
                sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.40.159 docker login -u ayazway -p ${dockerHubPwd}"
            }
            // Push Docker Image
            sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.40.159 docker push ayazway/myimage"
        }
    }
    stage ('Create Docker Container') {
        def dockerContainer = 'docker run --name mycontainer -d -p 8080:8080 ayazway/myimage'
        sshagent(['dockerHost']) {
            // Create Docker Container
            sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.40.159 ${dockerContainer}"
        }
    }
}
